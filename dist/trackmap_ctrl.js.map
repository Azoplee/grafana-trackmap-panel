{"version":3,"sources":["../src/trackmap_ctrl.js"],"names":["L","moment","appEvents","MetricsPanelCtrl","panelDefaults","maxDataPoints","autoZoom","lineColor","pointColor","TrackMapCtrl","$scope","$injector","_","defaults","panel","timeSrv","get","coords","leafMap","polyline","hoverMarker","hoverTarget","events","on","onInitEditMode","bind","onPanelTeardown","onPanelSizeChanged","onDataReceived","onPanelHover","onPanelClear","addEditorTab","$timeout","cancel","nextTickPromise","evt","length","target","Math","floor","pos","x","bringToFront","setStyle","fillColor","color","min","max","idx","exact","timestamp","setLatLng","position","invalidateSize","removeFrom","map","id","scrollWheelZoom","zoomSnap","zoomDelta","control","layers","tileLayer","attribution","maxZoom","addTo","forcedOverlay","subdomains","circleMarker","latLng","fillOpacity","weight","radius","mapBaseLayerChange","mapZoomToBox","e","overlay","layer","options","setZIndex","zIndex","bounds","reduce","t","c","boxZoomBounds","contains","from","to","Infinity","isFinite","setTime","utc","zoomToFit","fitBounds","getBounds","data","setupMap","setView","lats","datapoints","lons","i","push","addDataToMap","templateUrl"],"mappings":"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","sourcesContent":["import L from './leaflet/leaflet.js';\nimport moment from 'moment';\n\nimport appEvents from 'app/core/app_events';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport './leaflet/leaflet.css!';\nimport './partials/module.css!';\n\nconst panelDefaults = {\n  maxDataPoints: 500,\n  autoZoom: true,\n  lineColor: 'red',\n  pointColor: 'royalblue',\n}\n\nexport class TrackMapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.timeSrv = $injector.get('timeSrv');\n    this.coords = [];\n    this.leafMap = null;\n    this.polyline = null;\n    this.hoverMarker = null;\n    this.hoverTarget = null;\n\n    // Panel events\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-size-changed', this.onPanelSizeChanged.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n\n    // Global events\n    appEvents.on('graph-hover', this.onPanelHover.bind(this));\n    appEvents.on('graph-hover-clear', this.onPanelClear.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/pr0ps-trackmap-panel/partials/options.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  onPanelHover(evt) {\n    if (this.coords.length === 0) {\n      return;\n    }\n\n    // check if we are already showing the correct hoverMarker\n    let target = Math.floor(evt.pos.x);\n    if (this.hoverTarget && this.hoverTarget === target) {\n      return;\n    }\n\n    // check for initial show of the marker\n    if (this.hoverTarget == null){\n      this.hoverMarker.bringToFront()\n                      .setStyle({\n                        fillColor: this.panel.pointColor,\n                        color: 'white'\n                      });\n    }\n\n    this.hoverTarget = target;\n\n    // Find the currently selected time and move the hoverMarker to it\n    // Note that an exact match isn't always going to work due to rounding so\n    // we clean that up later (still more efficient)\n    let min = 0;\n    let max = this.coords.length - 1;\n    let idx = null;\n    let exact = false;\n    while (min <= max) {\n      idx = Math.floor((max + min) / 2);\n      if (this.coords[idx].timestamp === this.hoverTarget) {\n        exact = true;\n        break;\n      }\n      else if (this.coords[idx].timestamp < this.hoverTarget) {\n        min = idx + 1;\n      }\n      else {\n        max = idx - 1;\n      }\n    }\n\n    // Correct the case where we are +1 index off\n    if (!exact && idx > 0 && this.coords[idx].timestamp > this.hoverTarget) {\n      idx--;\n    }\n    this.hoverMarker.setLatLng(this.coords[idx].position);\n  }\n\n  onPanelClear(evt) {\n    // clear the highlighted circle\n    this.hoverTarget = null;\n    if (this.hoverMarker) {\n      this.hoverMarker.setStyle({\n        fillColor: 'none',\n        color: 'none'\n      });\n    }\n  }\n\n  onPanelSizeChanged() {\n    if (this.leafMap) {\n      this.leafMap.invalidateSize();\n    }\n  }\n\n  setupMap() {\n    // Create the map or get it back in a clean state if it already exists\n    if (this.leafMap) {\n      if (this.polyline) {\n        this.polyline.removeFrom(this.leafMap);\n      }\n      this.onPanelClear();\n      return;\n    }\n\n    // Create the map\n    this.leafMap = L.map('trackmap-' + this.panel.id, {\n      scrollWheelZoom: false,\n      zoomSnap: 0.5,\n      zoomDelta: 1,\n    });\n\n    // Define layers and add them to the control widget\n    L.control.layers({\n      'OpenStreetMap': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n        maxZoom: 19\n      }).addTo(this.leafMap), // Add default layer to map\n      'OpenTopoMap': L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n        maxZoom: 17\n      }),\n      'Satellite': L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n        attribution: 'Imagery &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n        // This map doesn't have labels so we force a label-only layer on top of it\n        forcedOverlay: L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}.png', {\n          attribution: 'Labels by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n          subdomains: 'abcd',\n          maxZoom: 20,\n        })\n      })\n    }).addTo(this.leafMap);\n\n    // Dummy hovermarker\n    this.hoverMarker = L.circleMarker(L.latLng(0, 0), {\n      color: 'none',\n      fillColor: 'none',\n      fillOpacity: 1,\n      weight: 2,\n      radius: 7\n    }).addTo(this.leafMap);\n\n    // Events\n    this.leafMap.on('baselayerchange', this.mapBaseLayerChange.bind(this));\n    this.leafMap.on('boxzoomend', this.mapZoomToBox.bind(this));\n  }\n\n  mapBaseLayerChange(e) {\n    // If a tileLayer has a 'forcedOverlay' attribute, always enable/disable it\n    // along with the layer\n    if (this.leafMap.forcedOverlay) {\n      this.leafMap.forcedOverlay.removeFrom(this.leafMap);\n      this.leafMap.forcedOverlay = null;\n    }\n    let overlay = e.layer.options.forcedOverlay;\n    if (overlay) {\n      overlay.addTo(this.leafMap);\n      overlay.setZIndex(e.layer.options.zIndex + 1);\n      this.leafMap.forcedOverlay = overlay;\n    }\n  }\n\n  mapZoomToBox(e) {\n    // Find time bounds of selected coordinates\n    const bounds = this.coords.reduce(\n      function(t, c) {\n        if (e.boxZoomBounds.contains(c.position)) {\n          t.from = Math.min(t.from, c.timestamp);\n          t.to = Math.max(t.to, c.timestamp);\n        }\n        return t;\n      },\n      {from: Infinity, to: -Infinity}\n    );\n\n    // Set the global time range\n    if (isFinite(bounds.from) && isFinite(bounds.to)) {\n      // KLUDGE: Create moment objects here to avoid a TypeError that\n      // occurs when Grafana processes normal numbers\n      this.timeSrv.setTime({\n        from: moment.utc(bounds.from),\n        to: moment.utc(bounds.to)\n      });\n    }\n  }\n\n  // Add the circles and polyline to the map\n  addDataToMap() {\n    this.polyline = L.polyline(\n      this.coords.map(x => x.position, this), {\n        color: this.panel.lineColor,\n        weight: 3,\n      }\n    ).addTo(this.leafMap);\n\n    this.zoomToFit();\n  }\n\n  zoomToFit(){\n    if (this.panel.autoZoom){\n      this.leafMap.fitBounds(this.polyline.getBounds());\n    }\n  }\n\n  refreshColors() {\n    if (this.polyline) {\n      this.polyline.setStyle({\n        color: this.panel.lineColor\n      });\n    }\n  }\n\n  onDataReceived(data) {\n    this.setupMap();\n\n    if (data.length === 0 || data.length !== 2) {\n      // No data or incorrect data, show a world map and abort\n      this.leafMap.setView([0, 0], 1);\n      return;\n    }\n\n    // Asumption is that there are an equal number of properly matched timestamps\n    // TODO: proper joining by timestamp?\n    this.coords.length = 0;\n    const lats = data[0].datapoints;\n    const lons = data[1].datapoints;\n    for (let i = 0; i < lats.length; i++) {\n      if (lats[i][0] == null || lons[i][0] == null ||\n          lats[i][1] !== lats[i][1]) {\n        continue;\n      }\n\n      this.coords.push({\n        position: L.latLng(lats[i][0], lons[i][0]),\n        timestamp: lats[i][1]\n      });\n    }\n    this.addDataToMap();\n  }\n}\n\nTrackMapCtrl.templateUrl = 'partials/module.html';\n"],"file":"trackmap_ctrl.js"}